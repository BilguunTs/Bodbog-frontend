import React from "react";
import { Form, Input, TextArea } from "semantic-ui-react-form-validator";
import { FormGroup, Label, Modal, Button, Message } from "semantic-ui-react";
import { useMutation } from "@apollo/react-hooks";
import { GET_HERD, ADD_TEMPR, EDIT_PROFILE } from "../Queries";
import { connect } from "../Context";
import { gql } from "apollo-boost";
import { DateInput } from "semantic-ui-calendar-react";

const EditProfile = ({ context, closer }) => {
  const { state } = context;

  const { firstname, lastname, bio, birthdate, email } = context.state.profile;
  const [editProfile, { loading, error, data }] = useMutation(EDIT_PROFILE);

  const { updateProfile } = context;

  const HandleSubmit = () => {
    if (!state.isAuth || localStorage.getItem("token") === null) {
      return alert("cannot edit");
    }

    editProfile({
      variables: {
        firstname,
        lastname,
        bio,
        email,
      },
    })
      .then((r) => closer())
      .catch((e) => {
        console.warn(e);
      });
  };
  const handleChangeProfile = (e, { name, value }) => {
    updateProfile(name, value);
  };

  return (
    <>
      <Modal.Header>–•—É–≤–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª</Modal.Header>
      <Modal.Content image>
        <Modal.Description>
          <Message info>
            –•—É–≤–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –æ—Ä—É—É–ª—Å–Ω–∞–∞—Ä —Ö—É–¥–∞–ª–¥–∞–Ω –∞–≤–∞–≥—á—Ç–∞–π —Ö–æ–ª–±–æ–æ —Ç–æ–≥—Ç–æ–æ—Ö–æ–¥ –∏–ª“Ø“Ø
            –¥”©—Ö”©–º –±–∞–π—Ö
          </Message>
          <Form
            id="EDIT_PROFILE"
            onSubmit={(e) => {
              e.persist();
              HandleSubmit();
            }}
          >
            <Input
              label="–ù—ç—Ä"
              name="firstname"
              value={firstname}
              onChange={handleChangeProfile}
              validators={["isString"]}
              errorMessages={["üåà –ù—ç—Ä –≥—ç–∂“Ø“Ø"]}
            ></Input>

            <Input
              label="–û–≤–æ–≥"
              name="lastname"
              value={lastname}
              onChange={handleChangeProfile}
              validators={["isString"]}
              errorMessages={["üåà –ù—ç—Ä –≥—ç–∂“Ø“Ø"]}
            ></Input>
            <Input
              label="–ï-–º–∞–π–ª —Ö–∞—è–≥"
              name="email"
              value={email}
              validators={["isString"]}
              errorMessages={["üåà –ï-–º–∞–π–ª –æ—Ä—É—É–ª–Ω–∞ —É—É"]}
              placeholder="—Ö“Ø—Ä—ç–Ω –∞–ª–∞–≥ –≥–º"
              onChange={handleChangeProfile}
            />

            <DateInput
              label="–¢”©—Ä—Å”©–Ω –æ–Ω —Å–∞—Ä ”©–¥”©—Ä"
              name="birthdate"
              closable
              popupPosition="top center"
              animation="fly right"
              clearable
              value={birthdate || ""}
              onChange={handleChangeProfile}
            />

            <TextArea
              name="bio"
              value={bio}
              onChange={handleChangeProfile}
              placeholder="–ú–∏–Ω–∏–π —Ç–∞–ª–∞–∞—Ä"
            />
          </Form>
        </Modal.Description>
      </Modal.Content>
      <Modal.Actions>
        <Button onClick={closer}>—Ü—É—Ü–ª–∞—Ö</Button>
        <Button
          color="yellow"
          icon="save"
          loading={loading}
          labelPosition="right"
          content="–•–∞–¥–≥–∞–ª–∞—Ö"
          form="EDIT_PROFILE"
          type="submit"
        />
      </Modal.Actions>
    </>
  );
};
export default connect(EditProfile);
